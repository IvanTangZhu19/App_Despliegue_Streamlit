# -*- coding: utf-8 -*-
"""4.1. Despliegue.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1gncl3B_MMuiXfIBlp660Fp3F_pNz5Yr6

#**Minería de datos - Despliegue Regresión -**

Datos: Videojuegos

Valor a predecir: Inversión/Presupuesto en una tienda de videojuegos

- Carga del modelo
- Carga de datos futuro
- Preparar datos futuros
- Aplicar modelo

*Nota: No se utilizan celdas de texto para que no se refleje en el despliegue HTML*
"""

#Importamos librerías básicas
import pandas as pd # manipulacion dataframes
import numpy as np  # matrices y vectores
import matplotlib.pyplot as plt #gráfica

#Cargamos el modelo
import pickle
filename = 'modelo-reg.pkl'
modelo, min_max_scaler, variables = pickle.load(open(filename, 'rb'))

#Cargamos los datos futuros
#data = pd.read_csv("videojuegos-datosFuturos.csv")
#data.head()
##Se comentaron despues de hacer toda la prediccion. Se hace para la interfaz gráfica

#Interfaz gráfica
#Se crea interfaz gráfica con streamlit para captura de los datos
#No se ejecuta aqui esta celda. No se puede poner al final

import streamlit as st

st.title('Predicción de inversión en una tienda de videojuegos')

Edad = st.slider('Edad', min_value=14, max_value=52, value=20, step=1)
videojuego = st.selectbox('Videojuego', ["'Mass Effect'","'Battlefield'", "'Fifa'","'KOA: Reckoning'","'Crysis'","'Sim City'","'Dead Space'","'F1'"])
Plataforma = st.selectbox('Plataforma', ["'Play Station'", "'Xbox'","PC","Otros"])#Debe de estar exactamente igual a como estaba originalmente
Sexo = st.selectbox('Sexo', ['Hombre', 'Mujer'])
Consumidor_habitual = st.selectbox('Consumidor_habitual', ['True', 'False'])


#Dataframe
datos = [[Edad, videojuego,Plataforma,Sexo,Consumidor_habitual]]
data = pd.DataFrame(datos, columns=['Edad', 'videojuego','Plataforma','Sexo','Consumidor_habitual']) #Dataframe con los mismos nombres de variables

#Se realiza la preparación
data_preparada=data.copy()

#En despliegue drop_first= False
data_preparada = pd.get_dummies(data_preparada, columns=['videojuego', 'Plataforma','Sexo', 'Consumidor_habitual'], drop_first=False, dtype=int)
data_preparada.head()

data_preparada.shape
#Hay que completar columnas

#Se adicionan las columnas faltantes
data_preparada=data_preparada.reindex(columns=variables,fill_value=0)
data_preparada.head()

data_preparada.shape
#reindex
#Eliminan las variables
#Si falta una, lo añade

#Se normaliza la edad para predecir con Knn, Red
#En los despliegues no se llama fit
data_preparada[['Edad']]= min_max_scaler.transform(data_preparada[['Edad']])
data_preparada.head()

"""#**Predicciones**"""

#Hacemos la predicción con el Tree
Y_pred = modelo.predict(data_preparada)
print(Y_pred)

data['Prediccion']=Y_pred
data.head()

data